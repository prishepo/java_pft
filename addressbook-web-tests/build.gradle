apply plugin: 'java'


repositories{
    mavenCentral()
}



dependencies {
    implementation 'org.testng:testng:7.7.1'
    implementation 'org.seleniumhq.selenium:selenium-java:4.8.0'
    implementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    implementation group: 'com.beust', name: 'jcommander', version: '1.82'
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.20'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.6'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
    implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.2.0.CR4'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.4'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.19'
    implementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.20.1'


}
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure.gradle.allure:allure-plugin:2.11.2"
    }
}

apply plugin: "io.qameta.allure"

task testGroups (type: Test){
    useTestNG() {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')){
        systemProperty 'verifyUI', "${verifyUI}"
    }
}
testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testContacts (type: Test){
    useTestNG() {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')){
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')){
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')){
        systemProperty 'verifyUI', "${verifyUI}"
    }



}